package com.phonepe.payment.dqr.entity;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name = "dqr_initialize_transaction_response")
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class DqrInitializeTransactionResponse {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Schema(hidden = true) // Internal DB id, not part of API contract
    private Long id;

    @Schema(description = "Indicates whether the API request was successful", example = "true")
    private boolean success;

    @Schema(description = "Standard response code", example = "SUCCESS")
    private String code;

    @Schema(description = "Detailed response message", example = "QR generated successfully")
    private String message;

    @Embedded
    @Schema(description = "Transaction-related details")
    private DataDto data;

    @Embeddable
    @Data
    public static class DataDto {
        @Schema(description = "Unique transaction ID generated by PhonePe", example = "TXN1234567890")
        private String transactionId;

        @Schema(description = "Transaction amount in INR", example = "100.50")
        private double amount;

        @Schema(description = "Merchant identifier registered with PhonePe", example = "MERCHANT98765")
        private String merchantId;

        @Column(length = 5000)
        @Schema(description = "Base64/UTF-8 encoded QR string used to generate QR image", example = "upi://pay?pa=merchant@upi&pn=MerchantName&am=100.50&cu=INR&tn=Payment")
        private String qrString;
    }
}
