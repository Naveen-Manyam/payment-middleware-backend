package com.phonepe.payment.collect.entity;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * @author Naveen Manyam
 * @version 1.0
 * @since 1.0
 * @see CollectCallRefundTransactionRequest
 */
@Entity
@Table(name = "collect_call_refund_transactions_response")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Schema(name = "CollectCallRefundTransactionResponse", description = "Response payload for CollectCall transaction refund")
public class CollectCallRefundTransactionResponse {

    /**
     * Auto-generated primary key for database storage.
     * This field is not exposed in API responses.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Schema(hidden = true)
    private Long id;

    /**
     * Unique refund transaction ID generated by PhonePe.
     * This identifier can be used to track the refund status and for customer service.
     */
    @Schema(description = "Unique refund transaction ID generated by PhonePe",
            example = "REFLINK123456789",
            required = true)
    @Column(nullable = false)
    private String refundTransactionId;

    /**
     * Original payment link transaction ID for which the refund was initiated.
     * Links this refund back to the original payment transaction.
     */
    @Schema(description = "Original transaction ID for which refund was initiated",
            example = "TXLINK987654321",
            required = true)
    @Column(nullable = false)
    private String transactionId;

    /**
     * Merchant identifier who requested the refund.
     * Used for validation and reporting purposes.
     */
    @Schema(description = "Merchant identifier",
            example = "MERCHANT12345",
            required = true)
    @Column(nullable = false)
    private String merchantId;

    /**
     * Actual refund amount processed in paise.
     * May differ from requested amount in case of partial refunds or adjustments.
     */
    @Schema(description = "Refund amount in paise",
            example = "5000",
            required = true)
    @Column(nullable = false)
    private double amount;

    /**
     * Current status of the refund operation.
     * Indicates whether the refund was successful, pending, or failed.
     */
    @Schema(description = "Refund status",
            example = "SUCCESS",
            allowableValues = {"SUCCESS", "PENDING", "FAILED", "CANCELLED"},
            required = true)
    @Column(nullable = false)
    private String status;

    /**
     * Response code from PhonePe API.
     * Indicates the result of the refund operation.
     */
    @Schema(description = "Response code from PhonePe API",
            example = "SUCCESS",
            required = true)
    @Column(nullable = false)
    private String code;

    /**
     * Response message from PhonePe API.
     * Provides additional details about the refund operation result.
     */
    @Schema(description = "Response message from PhonePe API",
            example = "Refund processed successfully")
    private String message;
}