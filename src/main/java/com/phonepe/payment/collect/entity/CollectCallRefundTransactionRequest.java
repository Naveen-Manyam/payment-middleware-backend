package com.phonepe.payment.collect.entity;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;

/**
 * Entity representing a request to refund a completed CollectCall transaction.
 *
 * <p>This entity captures the details required to process a refund for a
 * successfully completed payment link transaction. Refunds can be full or partial
 * depending on business requirements and can only be processed for transactions
 * that are in a completed state.
 *
 * <p>Key Properties:
 * <ul>
 *   <li><b>transactionId</b> - The original transaction identifier to refund</li>
 *   <li><b>amount</b> - Refund amount in paise (can be partial)</li>
 *   <li><b>merchantOrderId</b> - Original merchant order identifier</li>
 *   <li><b>message</b> - Reason or description for the refund</li>
 * </ul>
 *
 * <p>Refund Scenarios:
 * <ul>
 *   <li><b>Full Refund</b> - Complete transaction amount refunded</li>
 *   <li><b>Partial Refund</b> - Only portion of transaction amount refunded</li>
 *   <li><b>Multiple Refunds</b> - Multiple partial refunds up to original amount</li>
 * </ul>
 *
 * <p>Business Rules:
 * <ul>
 *   <li>Total refund amount cannot exceed original transaction amount</li>
 *   <li>Refunds can only be processed for completed transactions</li>
 *   <li>Refund processing time depends on customer's bank and payment method</li>
 * </ul>
 *
 * <p>Database Mapping:
 * Stored in table {@code CollectCall_refund_transactions_request} with
 * automatic timestamp tracking for audit purposes.
 *
 * @author PhonePe MiddleWare Team
 * @version 1.0
 * @since 1.0
 * @see CollectCallRefundTransactionResponse
 */
@Entity
@Table(name = "collect_call_refund_transactions_request")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Schema(name = "CollectCallRefundTransactionRequest", description = "Request payload for refunding a CollectCall transaction")
public class CollectCallRefundTransactionRequest {

    /**
     * Auto-generated primary key for database storage.
     * This field is not exposed in API responses.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Schema(hidden = true)
    private Long id;

    /**
     * Merchant identifier registered with PhonePe.
     * Used for validation and authorization of the refund request.
     */
    @Schema(description = "Merchant identifier registered with PhonePe",
            example = "MERCHANT98765",
            required = true)
    @Column(nullable = false)
    private String merchantId;

    /**
     * Unique transaction ID for this refund operation.
     * Generated by the system for tracking the refund process.
     */
    @Schema(description = "Unique transaction ID for this refund",
            example = "TXREFUND987654321",
            required = true)
    @Column(nullable = false)
    private String transactionId;

    /**
     * Original transaction ID that is being refunded.
     * Must match an existing completed payment link transaction.
     */
    @Schema(description = "Original transaction ID being refunded",
            example = "TXLINK123456789",
            required = true)
    @Column(nullable = false)
    private String originalTransactionId;

    /**
     * Original merchant order ID from the completed transaction.
     * Used for cross-reference and validation purposes.
     */
    @Schema(description = "Original merchant order ID",
            example = "ORDER12345",
            required = true)
    @Column(nullable = false)
    private String merchantOrderId;

    /**
     * Reason or description for the refund.
     * Helps in tracking refund patterns and customer service.
     */
    @Schema(description = "Reason or description for the refund",
            example = "Customer requested refund due to order cancellation")
    @Column(columnDefinition = "TEXT")
    private String message;

    /**
     * Payment provider identifier, typically "PHONEPE".
     */
    @Schema(description = "Payment provider identifier",
            example = "PHONEPE",
            required = true)
    @Column(nullable = false)
    private String provider;

    /**
     * Refund amount in paise (1 rupee = 100 paise).
     * Can be partial or full amount of the original transaction.
     */
    @Schema(description = "Refund amount in paise",
            example = "5000",
            required = true)
    @Column(nullable = false)
    private Long amount;

    /**
     * Timestamp when the refund request was created.
     * Automatically set when the entity is persisted.
     */
    @Schema(description = "Timestamp when the refund request was created",
            example = "2024-01-15T12:45:00")
    @Column(updatable = false)
    private LocalDateTime createdAt;

    /**
     * Sets the creation timestamp to current time before persisting.
     */
    @PrePersist
    protected void onCreate() {
        createdAt = LocalDateTime.now();
    }

    /**
     * Gets the refund amount. Alias for the amount field.
     *
     * @return the refund amount in paise
     */
    public Long getRefundAmount() {
        return amount;
    }
}